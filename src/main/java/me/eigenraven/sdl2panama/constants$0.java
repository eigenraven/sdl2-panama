// Generated by jextract

package me.eigenraven.sdl2panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$0 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$0() {}
    static final FunctionDescriptor const$0 = FunctionDescriptor.of(RuntimeHelper.POINTER);
    static final MethodHandle const$1 = RuntimeHelper.downcallHandle(
        "SDL_GetPlatform",
        constants$0.const$0
    );
    static final StructLayout const$2 = MemoryLayout.structLayout(
        JAVA_INT.withName("always_ignore"),
        JAVA_INT.withName("trigger_count"),
        RuntimeHelper.POINTER.withName("condition"),
        RuntimeHelper.POINTER.withName("filename"),
        JAVA_INT.withName("linenum"),
        MemoryLayout.paddingLayout(32),
        RuntimeHelper.POINTER.withName("function"),
        RuntimeHelper.POINTER.withName("next")
    ).withName("SDL_AssertData");
    static final VarHandle const$3 = constants$0.const$2.varHandle(MemoryLayout.PathElement.groupElement("always_ignore"));
    static final VarHandle const$4 = constants$0.const$2.varHandle(MemoryLayout.PathElement.groupElement("trigger_count"));
    static final VarHandle const$5 = constants$0.const$2.varHandle(MemoryLayout.PathElement.groupElement("condition"));
}


