// Generated by jextract

package me.eigenraven.sdl2panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct {
 *     Uint32 flags;
 *     SDL_Window* window;
 *     char* title;
 *     char* message;
 *     int numbuttons;
 *     const SDL_MessageBoxButtonData* buttons;
 *     const SDL_MessageBoxColorScheme* colorScheme;
 * };
 * }
 */
public class SDL_MessageBoxData {

    public static MemoryLayout $LAYOUT() {
        return constants$197.const$1;
    }
    public static VarHandle flags$VH() {
        return constants$197.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * Uint32 flags;
     * }
     */
    public static int flags$get(MemorySegment seg) {
        return (int)constants$197.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * Uint32 flags;
     * }
     */
    public static void flags$set(MemorySegment seg, int x) {
        constants$197.const$2.set(seg, x);
    }
    public static int flags$get(MemorySegment seg, long index) {
        return (int)constants$197.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void flags$set(MemorySegment seg, long index, int x) {
        constants$197.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle window$VH() {
        return constants$197.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SDL_Window* window;
     * }
     */
    public static MemorySegment window$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$197.const$3.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SDL_Window* window;
     * }
     */
    public static void window$set(MemorySegment seg, MemorySegment x) {
        constants$197.const$3.set(seg, x);
    }
    public static MemorySegment window$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$197.const$3.get(seg.asSlice(index*sizeof()));
    }
    public static void window$set(MemorySegment seg, long index, MemorySegment x) {
        constants$197.const$3.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle title$VH() {
        return constants$197.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* title;
     * }
     */
    public static MemorySegment title$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$197.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* title;
     * }
     */
    public static void title$set(MemorySegment seg, MemorySegment x) {
        constants$197.const$4.set(seg, x);
    }
    public static MemorySegment title$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$197.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void title$set(MemorySegment seg, long index, MemorySegment x) {
        constants$197.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle message$VH() {
        return constants$197.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * char* message;
     * }
     */
    public static MemorySegment message$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$197.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * char* message;
     * }
     */
    public static void message$set(MemorySegment seg, MemorySegment x) {
        constants$197.const$5.set(seg, x);
    }
    public static MemorySegment message$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$197.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void message$set(MemorySegment seg, long index, MemorySegment x) {
        constants$197.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle numbuttons$VH() {
        return constants$198.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int numbuttons;
     * }
     */
    public static int numbuttons$get(MemorySegment seg) {
        return (int)constants$198.const$0.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int numbuttons;
     * }
     */
    public static void numbuttons$set(MemorySegment seg, int x) {
        constants$198.const$0.set(seg, x);
    }
    public static int numbuttons$get(MemorySegment seg, long index) {
        return (int)constants$198.const$0.get(seg.asSlice(index*sizeof()));
    }
    public static void numbuttons$set(MemorySegment seg, long index, int x) {
        constants$198.const$0.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle buttons$VH() {
        return constants$198.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const SDL_MessageBoxButtonData* buttons;
     * }
     */
    public static MemorySegment buttons$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$198.const$1.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const SDL_MessageBoxButtonData* buttons;
     * }
     */
    public static void buttons$set(MemorySegment seg, MemorySegment x) {
        constants$198.const$1.set(seg, x);
    }
    public static MemorySegment buttons$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$198.const$1.get(seg.asSlice(index*sizeof()));
    }
    public static void buttons$set(MemorySegment seg, long index, MemorySegment x) {
        constants$198.const$1.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle colorScheme$VH() {
        return constants$198.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const SDL_MessageBoxColorScheme* colorScheme;
     * }
     */
    public static MemorySegment colorScheme$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)constants$198.const$2.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const SDL_MessageBoxColorScheme* colorScheme;
     * }
     */
    public static void colorScheme$set(MemorySegment seg, MemorySegment x) {
        constants$198.const$2.set(seg, x);
    }
    public static MemorySegment colorScheme$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)constants$198.const$2.get(seg.asSlice(index*sizeof()));
    }
    public static void colorScheme$set(MemorySegment seg, long index, MemorySegment x) {
        constants$198.const$2.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


