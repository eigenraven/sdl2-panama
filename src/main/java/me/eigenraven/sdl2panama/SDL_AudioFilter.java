// Generated by jextract

package me.eigenraven.sdl2panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*SDL_AudioFilter)(struct SDL_AudioCVT* cvt,unsigned short format);
 * }
 */
public interface SDL_AudioFilter {

    void apply(java.lang.foreign.MemorySegment cvt, short format);
    static MemorySegment allocate(SDL_AudioFilter fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$26.const$5, fi, constants$26.const$4, scope);
    }
    static SDL_AudioFilter ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _cvt, short _format) -> {
            try {
                constants$27.const$0.invokeExact(symbol, _cvt, _format);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


